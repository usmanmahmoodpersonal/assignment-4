{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","accountBalance","Home","credits","useEffect","console","log","src","alt","to","toFixed","UserProfile","this","props","userName","memberSince","Component","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","setCreditList","setAccountBalance","getCredits","a","fetch","creditsList","json","data","total","forEach","credit","amount","length","map","date","slice","description","id","lastId","currentDate","Date","toISOString","formData","FormData","get","parseFloat","step","Debits","debits","setDebitList","getDebits","debitList","debit","set","App","useState","creditList","currentUser","setCurrentUser","logInInfo","newUser","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.158080d8.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nconst AccountBalance = ({accountBalance}) => {\n  // Display account balance\n\n    return (\n      <div>\n        Balance: {accountBalance}\n      </div>\n    );\n\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component, useEffect} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nconst Home = ({accountBalance, credits}) => {\n    useEffect(() => {\n        console.log(credits);\n    }, [])\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={accountBalance.toFixed(2)}/>\n      </div>\n    );\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport {useEffect} from 'react';\n\nconst Credits = ({credits, setCreditList, accountBalance, setAccountBalance}) => {\n\n const getCredits = async () => {\n     console.log(\"Entered\");\n     const creditsList = await fetch('https://johnnylaicode.github.io/api/credits.json')\n     const data = await creditsList.json();\n     let total = 0;\n     data.forEach((credit) => {\n         total -= credit.amount;\n     });\n     setAccountBalance(accountBalance + total);\n     setCreditList(data);\n }\n\n    let creditsView = () => {\n        return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n            let date = credit.date.slice(0,10);\n            return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n        });\n    }\n\n\n    const addCredit = (e) => {\n        e.preventDefault();\n        const currCreditList = credits;\n        const lastId = currCreditList[currCreditList.length - 1].id\n        const currentDate = new Date().toISOString();\n        const formData = new FormData(e.target);\n        const description = formData.get('description');\n        const amount = parseFloat(formData.get('amount'));\n        setAccountBalance(accountBalance - amount);\n        setCreditList([...credits, {description: description, amount: amount.toFixed(2), date: currentDate, id: lastId + 1}]);\n    }\n\n     useEffect(() => {\n         if(credits.length === 0) {\n             getCredits();\n         }\n     }, [])\n\n\n    return (\n        <div>\n            <h1>Credits</h1>\n\n            {creditsView()}\n\n            <form onSubmit={addCredit}>\n                <input type=\"text\" name=\"description\" />\n                <input type=\"number\" name=\"amount\" step=\"0.0000001\" />\n                <button type=\"submit\">Add Credit</button>\n            </form>\n            <br/>\n            <p> Account Balance: {accountBalance.toFixed(2)}</p>\n            <br/>\n            <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport {useEffect} from \"react\";\n\nconst Debits = ({debits, setDebitList, accountBalance, setAccountBalance}) => {\n  // Create the list of Debit items\n\n    const getDebits = async () => {\n        const debitList = await fetch('https://johnnylaicode.github.io/api/debits.json')\n        const data = await debitList.json();\n        let total = 0;\n        data.forEach((debit) => {\n            total += debit.amount;\n        });\n        setAccountBalance(accountBalance + total);\n        setDebitList(data);\n    };\n\n    const addDebit = (e) => {\n        e.preventDefault();\n        const currDebitList = debits;\n        const lastId = currDebitList[currDebitList.length - 1].id\n        const currentDate = new Date().toISOString();\n        const formData = new FormData(e.target);\n        const description = formData.get('description');\n        const amount = parseFloat(formData.get('amount'));\n        formData.set('description', '');\n        formData.set('amount', '');\n        setAccountBalance(accountBalance + amount);\n        setDebitList([...debits, {description: description, amount: amount.toFixed(2), date: currentDate, id: lastId + 1}]);\n    }\n\n    useEffect(() => {\n        if(debits.length === 0){\n            getDebits();\n        }\n    }, []);\n  let debitsView = () => {\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" step=\"0.0000001\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n        <p>Account Balance: {accountBalance.toFixed(2)}</p>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {useState} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nconst App = () => {\n  // Create and initialize state\n    const [accountBalance, setAccountBalance] = useState(100);\n    const [creditList, setCreditList] = useState([]);\n    const [debitList, setDebitList] = useState([]);\n    const [currentUser, setCurrentUser] = useState({userName: 'Joe Smith',\n      memberSince: '11/22/99'});\n\n\n\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  const mockLogIn = (logInInfo) => {\n    const newUser = {...currentUser};\n    newUser.userName = logInInfo.userName;\n    setCurrentUser(newUser);\n  }\n\n  // Create Routes and React elements to be rendered using React components\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={accountBalance} setAccountBalance={setAccountBalance} credits={creditList} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={currentUser.userName} memberSince={currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={currentUser} mockLogIn={mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={creditList} setCreditList={setCreditList} accountBalance={accountBalance} setAccountBalance={setAccountBalance} />)\n    const DebitsComponent = () => (<Debits debits={debitList} setDebitList={setDebitList} accountBalance={accountBalance} setAccountBalance={setAccountBalance} />)\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/assignment-4\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}